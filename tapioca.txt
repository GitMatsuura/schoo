tapiocaです。こんにちは。ファイルを追加したらどうなるのでしょうか。湊川さん、お元気ですか？この間の講義は大変わかりやすく、gitに対する理解がかなり深まりました。昨年はschooさんでgitに関する別の講義を受けさせていただきました。しかし、サブバージョンよりも便利な点があるにもかかわらず、それが理解できずにいました。またコマンドラインのみでしたので、SourceTreeやTortoise Gifの使い方は自分で勉強する必要がありました。せっかくブランチを切ったのに、それをどうマージするのかがわからず、ブランチの便利さを全く理解できませんでした。しまいにはブランチにマスターをマージするようなことをして、まったく収拾がつかなくなってしまいました。普段現場で使っているTourtouise SVNが十分便利だったため、サブバージョンでもいいやと思うこともたびたびありました。ある日たまたまSchooへアクセスしたところ、先生の講義があったことや、「わかばちゃんと学ぶGit」がリリースされていたこともあり、とても興味がわきました。ひょっとしたら今までのgitに関する疑問も晴れるかもしれないという期待を胸に講義を受けました。バージョン管理の概念は理解できていましたが、お好み焼きの材料を混ぜるたびに写真を撮るというたとえで説明されていて、わかりやすかったです。おそらくバージョン管理が初めての人でも理解できるのではないかと思いました。リポジトリを作成し、ファイルを追加・変更して、ステージしてコミットするプロセスも理解できました。GitHubからクローンする方法も、SourceTreeのGUIによる説明でしたので、実作業のイメージができました。昨年からブランチとマージについてずっと疑問に感じていました。リリースする状態を維持しつつ、複数のタスクが同時に変更するというイメージです。SVNワークフローではリリースする順番にコミットと配信を行います。その前にテストアップが必要です。そのため複数の人間で同じファイルを同時に作業することができません。後にリリースするタスクでは直前のコミットを待ってから作業する必要があります。そのためテストアップを遅らせなければなりません。またコミットもリリース直前に1度だけ行うという運用ルールのため、リリース日に担当者が欠席という事態が発生すると大変です。リポジトリにファイルがないため、他の人がテストアップされたファイルをかき集めて修正し、OK後コミットして配信という面倒な作業が発生します。gitのワークフローでは、課題ごとにブランチを切り、こまめにコミット・プッシュし、リリースOKならmasterにマージして配信という流れで作業ができることが考えられます。今まで以上に柔軟に作業ができそうです。ただ今の現場にGitを導入するとなると、膨大な確認作業や書類のやりとり、稟議と承認が必要で、とても移行させることができません。